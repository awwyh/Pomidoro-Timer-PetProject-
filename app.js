// –¢–∞–π–º–µ—Ä
let timer
let minutes = 25
let seconds = 0
let isRunning = false

const timerDisplay = document.getElementById('timer')
const startBtn = document.getElementById('startBtn')
const stopBtn = document.getElementById('stopBtn')
const plusBtn = document.getElementById('plusBtn')
const minusBtn = document.getElementById('minusBtn')
const finishSound = document.getElementById('finishSound') // –≠–ª–µ–º–µ–Ω—Ç –∞—É–¥–∏–æ
const timerStatus = document.getElementById('timerStatus') // –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ —Ç–∞–π–º–µ—Ä–∞

// –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
function plusTimer() {
  if (!isRunning) {
    minutes += 5
    updateTimer()
  }
}

// –£–º–µ–Ω—å—à–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
function minusTimer() {
  if (!isRunning && minutes > 5) {
    minutes -= 5
    updateTimer()
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
function updateTimer() {
  let hours = Math.floor(minutes / 60) // –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤
  let remainingMinutes = minutes % 60 // –û—Å—Ç–∞–≤—à–∏–µ—Å—è –º–∏–Ω—É—Ç—ã

  const minutesStr =
    remainingMinutes < 10 ? '0' + remainingMinutes : remainingMinutes
  const secondsStr = seconds < 10 ? '0' + seconds : seconds

  // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å—ã:–º–∏–Ω—É—Ç—ã:—Å–µ–∫—É–Ω–¥—ã
  if (hours > 0) {
    timerDisplay.textContent = `${hours}:${minutesStr}:${secondsStr}`
  } else {
    timerDisplay.textContent = `${minutesStr}:${secondsStr}`
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
function startTimer() {
  if (isRunning) return
  isRunning = true
  startBtn.disabled = true
  plusBtn.disabled = true
  minusBtn.disabled = true
  stopBtn.disabled = false
  timerStatus.textContent = '–¢–∞–π–º–µ—Ä –ü–æ–º–æ–¥–æ—Ä–æ ‚è±Ô∏è' // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞

  timer = setInterval(() => {
    if (seconds === 0) {
      if (minutes === 0) {
        clearInterval(timer)
        isRunning = false
        startBtn.disabled = false
        stopBtn.disabled = true
        plusBtn.disabled = false
        minusBtn.disabled = false
        finishSound.play() // –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∑–≤—É–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
        showPopup('–í—Ä–µ–º—è –≤—ã—à–ª–æ! –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ—Ä—ã–≤...') // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ
        startBreakTimer() // –ù–∞—á–∏–Ω–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –ø–µ—Ä–µ—Ä—ã–≤–∞
        return
      }
      minutes--
      seconds = 59
    } else {
      seconds--
    }
    updateTimer()
  }, 1000)
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞
function stopTimer() {
  clearInterval(timer)
  isRunning = false
  minutes = 25
  seconds = 0
  updateTimer()
  startBtn.disabled = false
  plusBtn.disabled = false
  minusBtn.disabled = false
  stopBtn.disabled = true
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ 5-–º–∏–Ω—É—Ç–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞
function startBreakTimer() {
  startBtn.disabled = true // –î–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É Start –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–π –≤–æ –≤—Ä–µ–º—è –ø–µ—Ä–µ—Ä—ã–≤–∞

  minutes = 5 // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ—Ä—ã–≤ –Ω–∞ 5 –º–∏–Ω—É—Ç
  seconds = 0
  updateTimer()

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ –≤—Ä–µ–º—è –ø–µ—Ä–µ—Ä—ã–≤–∞
  timerStatus.textContent = '–ü–µ—Ä–µ—Ä—ã–≤ üßò‚Äç‚ôÇÔ∏è'

  timer = setInterval(() => {
    if (seconds === 0) {
      if (minutes === 0) {
        clearInterval(timer)
        isRunning = false
        startBtn.disabled = true
        plusBtn.disabled = false
        minusBtn.disabled = false
        stopBtn.disabled = true
        alert('–ü–µ—Ä–µ—Ä—ã–≤ –∑–∞–≤–µ—Ä—à–µ–Ω!')
        timerStatus.textContent = '–¢–∞–π–º–µ—Ä –ü–æ–º–æ–¥–æ—Ä–æ ‚è±Ô∏è' // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Ç–∞–π–º–µ—Ä–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞
        return
      }
      minutes--
      seconds = 59
    } else {
      seconds--
    }
    updateTimer()
  }, 1000)
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞
function showPopup(message) {
  const popup = document.createElement('div')
  popup.textContent = message
  popup.style.position = 'fixed'
  popup.style.top = '50%'
  popup.style.left = '50%'
  popup.style.transform = 'translate(-50%, -50%)'
  popup.style.padding = '20px'
  popup.style.backgroundColor = 'rgba(0, 0, 0, 0.8)'
  popup.style.color = 'white'
  popup.style.borderRadius = '10px'
  popup.style.fontSize = '20px'
  popup.style.textAlign = 'center'
  document.body.appendChild(popup)

  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
  setTimeout(() => {
    popup.remove()
  }, 3000)
}

// –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π –∫ –∫–Ω–æ–ø–∫–∞–º —Ç–∞–π–º–µ—Ä–∞
startBtn.addEventListener('click', startTimer)
stopBtn.addEventListener('click', stopTimer)
plusBtn.addEventListener('click', plusTimer)
minusBtn.addEventListener('click', minusTimer)

updateTimer()

// ToDo List
const inputEl = document.getElementById('title')
const createBtn = document.getElementById('create')
const listEl = document.getElementById('list')

const notes = []

// –†–µ–Ω–¥–µ—Ä –∑–∞–¥–∞—á
function render() {
  listEl.innerHTML = ''
  if (notes.length === 0) {
    listEl.innerHTML =
      '<p>' +
      (currentLang === 'ru' ? '–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø—É—Å—Ç.' : 'Task list is empty.') +
      '</p>'
  }

  for (let i = 0; i < notes.length; i++) {
    listEl.insertAdjacentHTML('beforeend', getNoteTemplate(notes[i], i))
  }
}

// –®–∞–±–ª–æ–Ω –∑–∞–¥–∞—á–∏
function getNoteTemplate(note, index) {
  return `<li class="list-item">
    <span class="${note.completed ? 'text-decoration-line-through' : ''}">
      ${note.title}
    </span>
    <span>
      <button class="btnc btn-success" data-index="${index}" data-type="toggle">&check;</button>
      <button class="btnc btn-danger" data-index="${index}" data-type="remove">&times;</button>
    </span>
  </li>`
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
createBtn.onclick = function () {
  if (inputEl.value.trim().length === 0) {
    return
  }
  const newNote = {
    title: inputEl.value,
    completed: false,
  }
  notes.push(newNote)
  render()
  inputEl.value = ''
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ (—É–¥–∞–ª–µ–Ω–∏–µ/–æ—Ç–º–µ—Ç–∫–∞)
listEl.onclick = function (event) {
  if (event.target.dataset.index) {
    const index = Number(event.target.dataset.index)
    const type = event.target.dataset.type

    if (type === 'toggle') {
      notes[index].completed = !notes[index].completed
    } else if (type === 'remove') {
      notes.splice(index, 1)
    }
    render()
  }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
const themeToggleButton = document.getElementById('theme-toggle')
const body = document.body

themeToggleButton.onclick = function () {
  body.classList.toggle('dark-theme')
  themeToggleButton.textContent = body.classList.contains('dark-theme')
    ? '‚òÄÔ∏è'
    : 'üåô'
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞
const langToggleButton = document.getElementById('lang-toggle')

const translations = {
  ru: {
    title: '–ü–æ–º–æ–¥–æ—Ä–æ –¢–∞–π–º–µ—Ä',
    titleTimer: '–¢–∞–π–º–µ—Ä –ü–æ–º–æ–¥–æ—Ä–æ ‚è±Ô∏è',
    addTime: '–î–æ–±–∞–≤–∏—Ç—å 5 –º–∏–Ω—É—Ç',
    subtractTime: '–£–±—Ä–∞—Ç—å 5 –º–∏–Ω—É—Ç',
    start: '–°—Ç–∞—Ä—Ç',
    reset: '–°–±—Ä–æ—Å',
    tasksTitle: '–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á',
    addTask: '–î–æ–±–∞–≤–∏—Ç—å',
    enterGoal: '–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É',
    listing: '–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø—É—Å—Ç.',
  },
  en: {
    title: 'Pomodoro Timer',
    titleTimer: 'Pomodoro Timer ‚è±Ô∏è',
    addTime: 'Add 5 minutes',
    subtractTime: 'Remove 5 minutes',
    start: 'Start',
    reset: 'Reset',
    tasksTitle: 'Task List',
    addTask: 'Add',
    enterGoal: 'Enter a task',
    listing: 'Task list is empty.',
  },
}

let currentLang = 'ru' // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π

function translate() {
  const lang = translations[currentLang]
  document.getElementById('titlee').textContent = lang.title
  document.getElementById('timerStatus').textContent = lang.titleTimer
  document.getElementById('plusBtn').textContent = lang.addTime
  document.getElementById('minusBtn').textContent = lang.subtractTime
  document.getElementById('startBtn').textContent = lang.start
  document.getElementById('stopBtn').textContent = lang.reset
  document.getElementById('tasks-title').textContent = lang.tasksTitle
  document.getElementById('create').textContent = lang.addTask
  inputEl.setAttribute('placeholder', lang.enterGoal)
  render()
}

langToggleButton.onclick = function () {
  currentLang = currentLang === 'ru' ? 'en' : 'ru'
  langToggleButton.textContent = currentLang === 'ru' ? 'RU' : 'EN'
  translate()
}

// –ü–µ—Ä–µ–≤–æ–¥ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
translate()
